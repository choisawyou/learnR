install.packages(c("car", "ggmap", "rgl", "Rtsne"))
ac.1 <- ac %>%
group_by(시군구) %>%
filter(시군구 == "종로구") %>%
ac.1
library(xlsx)
library(dplyr)
library(psych)
require(descr)
library(ggmap)
setwd("C:/learnR")
acc <- read.csv(file ="도로교통공단_시도_시군구별_월별_교통사고(2018).csv")
head(acc)
View(acc)
ac
ac <- subset(acc, 시도 == "서울" , select = c(시군구,월,발생건수))
ac
ac.1 <- ac %>%
group_by(시군구) %>%
filter(시군구 == "종로구") %>%
summarise(total = sum(발생건수))
ac.1
ac.1 <- ac %>%
group_by(시군구) %>%
summarise(total = sum(발생건수))
ac.1
ac.1 <- ac %>%
group_by(시군구) %>%
summarise(total = sum(발생건수))
ac.1
ac.1 <- ac %>%
group_by(시군구) %>%
summarise(total = sum(발생건수))
ac.1
gc <- geocode(enc2utf8(ac.1$시군구))
gc <- geocode(enc2utf8(c(ac.1$시군구)))
ac.1 <- ac %>%
group_by(시군구) %>%
summarise(total = sum(발생건수))
gc <- geocode(enc2utf8(c(ac.1$시군구)))
ac.c <- ac.1$시군구
gc <- geocode(enc2utf8(c(ac.1$시군구)))
ac.c <- c(ac.1$시군구)
gc <- geocode(enc2utf8(c(ac.c))
gc <- geocode(enc2utf8(c(ac.c)))
gc <- geocode(enc2utf8(c(ac.c)))
gc <- geocode(enc2utf8(ac.c))
gc <- geocode(enc2utf8(ac.c))
class(ac.c)
ac.c <- c(ac.1$시군구)
ac.1 <- ac %>%
group_by(시군구) %>%
summarise(total = sum(발생건수))
ac.1
ac.1
ac.c <- c(ac.1$시군구)
class(ac.c)
map <- get_googlemap()
register_google(key = "AIzaSyBW1-gQiLvNeJ3_pTZnF_rhU3sxbIPHC9c")
ac.1
ac.c <- as.character(ac.1$시군구)
ac.c
gc <- geocode(enc2utf8(ac.c))
gc
gc.n <- as.numeric(gc)
cen <- c(mean(gc$lon),mean(gc$lat))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =10,
size =c(640,640),
marker =gc)
ggmap(map)
gc <- geocode(enc2utf8(ac.c))#숫자로 변환?
cen <- c(mean(gc$lon),mean(gc$lat));cen
gc <- geocode(enc2utf8(ac.c) ; gc)#숫자로 변환?
gc <- geocode(enc2utf8(ac.c)) ; gc#숫자로 변환?
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =10,
size =c(640,640)
)
gmap <- ggmap(map)
gmap+geom_point(data = ac.c)
ac.c <- as.character(ac.1$시군구);ac.c
ac.c
ac.1
gc
gmap+geom_point(data = ac.1,
aes(x= gc$lon,y =gc$lat , size = ac.1$total),
alpha = 0.4 , col = "red")+
scale_size_continuous(range = c(1,25))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =10,
size =c(800,800)   )
ggmap(map)
gmap <- ggmap(map)
gmap+geom_point(data = ac.1,
aes(x= gc$lon,y =gc$lat , size = ac.1$total),
alpha = 0.4 , col = "red")+
scale_size_continuous(range = c(1,25))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =12,
size =c(800,800)   )
ggmap(map)
gmap <- ggmap(map)
gmap+geom_point(data = ac.1,
aes(x= gc$lon,y =gc$lat , size = ac.1$total),
alpha = 0.4 , col = "red")+
scale_size_continuous(range = c(1,25))
head(acc)
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =11,
size =c(800,800)   )
ggmap(map)
gmap <- ggmap(map)
gmap+geom_point(data = ac.1,
aes(x= gc$lon,y =gc$lat , size = ac.1$total),
alpha = 0.4 , col = "red")+
scale_size_continuous(range = c(1,25))
gmap+geom_point(data = ac.1,
aes(x= gc$lon,y =gc$lat , size = ac.1$total),
alpha = 0.4 , col = "red")+
scale_size_continuous(range = c(1,20))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =12,
size =c(800,800)   )
ggmap(map)
gmap <- ggmap(map)
gmap+geom_point(data = ac.1,
aes(x= gc$lon,y =gc$lat , size = ac.1$total),
alpha = 0.4 , col = "red")+
scale_size_continuous(range = c(1,20))
ac.1
gc
ac %>%
group_by(시군구)
aj <- subset(acc, 시도 == "제주" , select = c(시군구,월,발생건수)) ; aj
aj.1 <- acj%>%
group_by(시군구) %>%
summarise(total = sum(발생건수))
aj <- subset(acc, 시도 == "제주" , select = c(시군구,월,발생건수)) ; aj
aj.1 <- aj%>%
group_by(시군구) %>%
summarise(total = sum(발생건수))
ac.1 <- ac %>%
group_by(시군구) %>%
summarise(total = sum(발생건수))
ac.1
aj.1
aj.c <- as.character(aj.1$시군구)
aj.c
gc <- geocode(enc2utf8(aj.c))
cen <- c(mean(gc$lon),mean(gc$lat))
map <- get_googlemap(center = cen ,
maptype = "roadmap"m
zoom =12,
size =c( 800,800))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =12,
size =c( 800,800))
gmap <- ggmap(map)
aj.1
aj <- subset(acc, 시도 == "제주" , select = c(시군구,월,발생건수)) ; aj
aj.1 <- aj%>%
group_by(시군구) %>%
summarise(total = sum(발생건수)) ; aj.1
aj.c <- as.character(aj.1$시군구)
aj.c
gc <- geocode(enc2utf8(aj.c))
cen <- c(mean(gc$lon),mean(gc$lat))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =12,
size =c( 800,800))
gmap <- ggmap(map)
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "yellow")+
scale_size_continuous(range = c(1,20))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =5,
size =c( 800,800))
gmap <- ggmap(map)
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "yellow")+
scale_size_continuous(range = c(1,20))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =8,
size =c( 800,800))
gmap <- ggmap(map)
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "yellow")+
scale_size_continuous(range = c(1,20))
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "yellow")+
scale_size_continuous(range = c(1,20))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =10,
size =c( 800,800))
gmap <- ggmap(map)
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "yellow")+
scale_size_continuous(range = c(1,20))
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "black")+
scale_size_continuous(range = c(1,20))
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "black")+
scale_size_continuous(range = c(1,10))
map <- get_googlemap(center = cen ,
maptype = "roadmap",
zoom =11,
size =c( 800,800))
gmap <- ggmap(map)
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "black")+
scale_size_continuous(range = c(1,10))
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "black")+
scale_size_continuous(range = c(1,25))
gmap+
geom_point(data =aj.1,
aes(x= gc$lon,y =gc$lat, size = aj.1$total ),
alpha =0.3 , col = "black")+
scale_size_continuous(range = c(10,25))
ds.seoul <- subset( ds.tot, 시도 == '서울' )
setwd("C:/learnR")
ds.tot <- read.csv( '도로교통공단_시도_시군구별_월별_교통사고(2018).csv' )
ds.seoul <- subset( ds.tot, 시도 == '서울' )
ds.seoul
ds.year
ds.year <- aggregate( ds.seoul[ , '발생건수' ],
by = list( 시군구 = ds.seoul$시군구 ), FUN = sum )
ds.year
ds.seoul <- subset( ds.tot, 시도 == '서울' ) ;head(ds.seoul)
ds.year
ds.year
gc
class(gc)
map <- get_googlemap( center = cen,
size = c( 640, 640 ),
zoom = 11,
maptype = 'roadmap' )
gmap <- ggmap(map)
gmap +
geom_point( data = data.frame(gc),
aes( x = lon, y = lat, size = ds.year$x ),
alpha = 0.5,
col = "red" ) +
scale_size_continuous( range = c(1, 14 ) )
gmap +
geom_point( data = data.frame(gc),
aes( x = lon, y = lat, size = ds.year$x ),
alpha = 0.5,
col = "red" ) +
scale_size_continuous( range = c(1, 14 ) )
gmap <- ggmap(map)
gmap +
geom_point( data = data.frame(gc),
aes( x = lon, y = lat, size = ds.year$x ),
alpha = 0.5,
col = "red" ) +
scale_size_continuous( range = c(1, 14 ) )
ds.jeju <- subset( ds.tot, 시도 == '제주' )
ds.year <- aggregate( ds.jeju[ , '발생건수' ],
by = list( 시군구 = ds.jeju$시군구 ), FUN = sum )
ds.year
gc <- geocode( enc2utf8( as.vector( ds.year$시군구 ) ) )
gc
cen <- colMeans( as.matrix( gc ) )
map <- get_googlemap( center = cen,
size = c( 640, 640 ),
zoom = 11,
maptype = 'roadmap' )
gmap <- ggmap(map)
gmap +
geom_point( data = data.frame(gc),
aes( x = lon, y = lat, size = ds.year$x ),
alpha = 0.5,
col = "red" ) +
scale_size_continuous( range = c(1, 14 ) )
library( ggplot2 )
library( Rtsne )
ds <- data.frame( state.x77 )
## 중복 데이터 삭제 ( t-SNE에서는 중복데이터가 없어야 한다. )
dup = which( duplicated( ds ) )
dup
gc <- geocode( enc2utf8( "서울시청" ) )
gc
cen <- as.numeric( gc )
gc <- geocode( enc2utf8( "금강산" ) )
gc
cen <- as.numeric( gc )
map <- get_googlemap( center = cen,
size = c(500,500),
zoom = 8,
maptype = 'hybrid' )
ggmap( map )
map <- get_googlemap( center = cen,
size = c(640,640),
zoom = 16,
maptype = 'roadmap' )
ggmap( map )
cen <- as.numeric( gc )
gc <- geocode( enc2utf8( "강남역" ) )
gc
cen <- as.numeric( gc )
map <- get_googlemap( center = cen,
size = c(640,640),
zoom = 16,
maptype = 'roadmap' )
ggmap( map )
office.name <- c( '광주광역시', '부산광역시', '인천광역시', '대구광역시',
'울산광역시', '대전광역시' )
gc <- geocode( enc2utf8( office.name ) )
gc
cen <- colMeans( as.matrix( gc ) )
cen
gc
cen
park.name <- c( '북한산', '설악산', '치악산', '오대산','태백산' )
gc <- geocode( enc2utf8( park.name ) )
gc
cen <- colMeans( as.matrix( gc ) )
gc <- geocode( enc2utf8( as.vector( ds.year$시군구 ) ) )
gc
cen <- colMeans( as.matrix( gc ) )
map <- get_googlemap( center = cen,
size = c( 640, 640 ),
zoom = 11,
maptype = 'roadmap' )
