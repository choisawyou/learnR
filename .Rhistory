numbervalue <- 1
numbervalue
print ( numbervalue )
cat ( "numeric number" : numbervalue, \n)
cat ( "numeric number" : numbervalue, "\n")
cat ( "numeric number" : numbervalue, "\n")
cat ( "numeric number" : numbervalue, "\n")
cat ( "numeric number" : numbervalue, "\n")
cat ( "numeric number : " , numbervalue, "\n")
numberValue <- scan()
numberValue <- scan()
cat ( "number : ", numberValue , "\t")
number7<- number7 + 1
number7<-4
number7<- number7 + 1
number7<-4
number7<- number7 + 1
number7
print ( number 1 > 10 & number2 >10 )
print ( number1 > 10 & number2 >10 )
print ( number1 > 10 & number2 >10 )
number1 <- 10
number2 <-10.5
print ( number1 > 10 & number2 > 10 )
print ( number1 > 10 | number2 > 10 )
print ( number1 > 10 | number2 > 10 )
print (!(number1 > 10 ))
if jobtype == 'b') {
bonus <- 200
} else {
bonus <- 100
}
jobtype <- 'a'
if jobtype == 'b') {
bonus <- 200
} else {
bonus <- 100
}
jobtype <- 'a'
if jobtype == 'b') {
bonus <- 200
} else {
bonus <- 100
}
jobtype <- 'a'
if jobtype == 'b') {
bonus <- 200
} else {
bonus <- 100}
jobtype <- 'a'
if jobtype == 'b') {
bonus <- 200
} else {
bonus <- 100
}
jobtype <- 'a'
if jobtype == 'b') {
bonus <- 200
} else {
bonus <- 100
}
cat ( "jobtype :", jobtype, "\t\tbonus : ", bonus )
if ( a > 5 & b > 5 ) {
cat (a, "> 5 and" ,b, " > 5 ")
} else {
cat(a, " <= 5 and ", b, "<= 5")
}
a <- 10
b <- 20
if ( a > 5 & b > 5 ) {
cat (a, "> 5 and" ,b, " > 5 ")
} else {
cat(a, " <= 5 and ", b, "<= 5")
}
a <- 10
b <- 20
if ( a > b ){
c <- a
} else {
c <- b
}
cat ("a = " , a, "\tb = ", b, "\t c = ", c )
c <- ifelse( a > b, a,b)
cat( "a = ", a , " b = " , b , " c = ", c)
for(i in 57:59)
print (i)
multiple <- 2
for (i in 2:9) {
cat(multiple, "X",i ,"=", multiple*i, \n)
}
}
multiple <- 2
for (i in 2:9) {
cat(multiple, "X",i ,"=", multiple*i, "\n"")
}
multiple <- 2
for (i in 2:9) {
cat(multiple, "X",i ,"=", multiple*i, "\n")
}
for (i in 2:9) {
cat(multiple, "X",i ,"=", multiple*i, "\n")
}
while (i <= 10 ){
print(i)
i <-i+1
}
i <-1
while (i <= 10 ){
print(i)
i <-i+1
}
for( i in 1:100)
cat(i, " ")
if ( i %% 10 == 0){
print ("\n")
}
for( i in 1:100)
cat(i, " ")
if ( i %% 10 == 0){
print ("\n")
}
for( i in 1:100)
cat(i, " ")
if ( i %% 10 == 0 ){
print ("\n")
}
for( i in 1:100)
cat(i, " ")
if ( i %% 10 == 0 ){
print ("\n")
}
}
for( i in 1:100)
cat(i, " ")
if ( i %% 10 == 0 ){
print ("\n")
}
linecount <-1
for ( i in 1:100){
cat(i, " ")
linecount <- linecount +1
if linecount > 10 ) {
print ("\n")
linecount <-1
}
}
for ( i in 1:100){
cat(i, " ")
linecount <- linecount +1
if linecount > 10 ) {
print ("\n")
linecount <- 1
}
}
linecount <-1
for ( i in 1:100){
cat(i, " ")
linecount <- linecount +1
if linecount > 10 ) {
print ("\n")
linecount <- 1
}
}
linecount <-1
for ( i in 1:100){
cat(i, " ")
linecount <- linecount +1
if linecount > 10 ) {
print ("\n")
linecount <- 1
}
}
linecount <-1
for ( i in 1:100){
cat(i, " ")
linecount <- linecount +1
if linecount > 10 ) {
print ("\n")
linecount <- 1
}
}
linecount <-1
for ( i in 1:100){
cat(i, " ")
linecount <- linecount +1
if linecount > 10 ) {
print ("\n")
linecount <- 1
}
}
linecount <-1
for ( i in 1:100){
cat(i, " ")
linecount <- linecount +1
if linecount > 10 ) {
print ("\n")
linecount <- 1
}
}
t = 1
while( t <= 1000 ){
print ( t )
t %% 3 == 0
}
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ")
if ( i %% 10 == 0)
print ("\n")
}
linecount <- 1
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ")
linecount <- linecount + 1
if ( line count > 10){
print ("\n")
}
linecount <- 1
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ")
linecount <- linecount + 1
if ( linecount > 10){
print ("\n")
}
linecount <- 1
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ") {
linecount <- linecount + 1
if ( linecount > 10){
print ("\n")
}
}
linecount <- 1
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ")
}
linecount <- linecount + 1
if ( linecount > 10){
print ("\n")
linecount <- 1
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ")
}
linecount <- linecount + 1
if ( linecount %% 21 == 0){
print ("\n")
linecount <- 1
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ")
}
linecount <- linecount + 1
if ( linecount %% 21 == 0){
print ("\n")
}
}4
linecount <- 1
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ")
}
linecount <- linecount + 1
if ( linecount %% 21 == 0){
print ("\n")
}
linecount <- 1
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ")
}
linecount <- linecount + 15
if ( linecount %% 21 == 0){
print ("\n")
}
for (i in 1:1000){
if ( i %% 3 == 0 |i %% 5 ==0)
cat (i , " ")
}
linecount <- 1
linecount <- linecount + 1
if ( linecount %% 10 == 0){
print ("\n")
}
v1
v1 <- 51:90
evennumber <- v1[v1] %% 2
if (evennumber = 0){ evennumber  * 2}
v1
evennumber <- v1[ seq(51,90,1)]
evennumber
evennumber <- c[ seq(51,90,1)]
evennumber
#11. 짝수에 대해서만 2를 곱해서 저장★
v1 <- c(51:90)
#11. 짝수에 대해서만 2를 곱해서 저장★
v1 <- c(51:90)
v1even <- v1[v1 %%]
v1 <- c(51:90)
even <- v1[v1 %% 2 == 0]
even
ve
ve <- c(2 * even)
ve
v1 <- c(51:90)
even <- v1[v1 %% 2 == 0 ]
ve <- c(2 * even)
ve
v1[ seq(1,40,1)] <- ve[1:20]
v1
v1 <- c(51:90)
even <- v1[v1 %% 2 == 0 ]
ve <- c(2 * even)
ve
v1[ seq(1,40,2)] <- ve[1:20]
v1
v1 <- c(51:90)
even <- v1[v1 %% 2 == 0 ]
ve <- c(2 * even)
ve
v1[ seq(1,40,1)] <- ve[1:20]
v1
v1 <- 51:90
sev <- v1[ v1 %% 7]
sev
v1 <- 51:90
sev <- v1[ v1 %% 7 == 0 ]
sev
v1 <- 51:90
sev <- c(v1[ v1 %% 7 == 0 ])
sev
v1 <- 51:90
sev <- c(v1[ v1 %% 7 == 0 ])
sev
v1[-sev]
v1
#12. 7의 배수들을 제거한 후 v1 내용 출력 ★
v1 <- 51:90
sev <- c(v1[ v1 %% 7 == 0 ])
sev
v1[-sev[sev]]
v1
배수들을 제거한 후 v1 내용 출력 ★
v1 <- 51:90
sev <- c(v1[ v1 %% 7 == 0 ])
sev
v1[-(sev)]
v1
의 배수들을 제거한 후 v1 내용 출력 ★
v1 <- 51:90
sev <- c(v1[ v1 %% 7 == 0 ])
sev
v1 <- v1[-(sev)]
v1
12. 7의 배수들을 제거한 후 v1 내용 출력 ★
v1 <- 51:90
sev <- c(v1[ v1 %% 7 == 0 ])
sev
v1[c(51:90)] <- v1[-(sev)]
v1
v1[-sev]
