areacode
library(moonBook2)
areacode
areacode
devtools::install_github("cardiomoon/moonBook2")
library(moonBook2)
install.packages("moonBook")
library(moonBook2)
require(moonBook2)
install.packages("moonBook")
require(moonBook2)
devtools::install_github("cardiomoon/moonBook2")
library(moonBook)
areacode
library(kormaps2014)
library(moonBook)
areacode
ggplot(korpop1,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap1,colour="black",size=0.1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
library(ggplot2)
theme_set(theme_gray(base_family="NanumGothic"))
ggplot(korpop1,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap1,colour="black",size=0.1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
ggplot(korpop1,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap1,colour="black",size=0.1)+
expand_limits(x=kormap2$long,y=kormap1$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
ggplot(korpop1,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap2,colour="black",size=0.1)+
expand_limits(x=kormap2$long,y=kormap2$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
ggplot(korpop2,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap2,colour="black",size=0.1)+
expand_limits(x=kormap2$long,y=kormap2$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
library(moonBook)
devtools::install_github("cardiomoon/kormaps2014")  #devtool은  git hub 에 접근하기 위한 함수
devtools::install_github("cardiomoon/moonBook2")  #한국 지도가 git hub에 올려져있음
library(moonBook2)
library(moonBook)
areacode
state.x77
class(state.x77)
st <- data.frame(state.x77)
install.packages("Rtsne")
library(rtsne)
library(Rtsne)
main = "Gear and Vs") #제목
# 색상 넣기
mosaicplot(~gear + vs , data = mtcars,
color = c( "green","blue"),
main = " Great and VS")
dim(st)
str(st)
dup = which(duplicated(st))
dup
dup
tsne <- Rtsne(st,dim = 2, perplexity = 15)
tsne.2 <- Rtsne(st,dim = 2, perplexity = 15)
tsne.3 <- Rtsne(st,dim = 3, perplexity = 15)
class(tsne.2)
tsne.2 <- Rtsne(st,dim = 2, perplexity = 15) ;tsne.2
df.2 <- data.frame(tsne.2$Y)
df.2
df.3 <-  data.frame(tsne.3$Y)
df.3
ggplot(df.2,aes(x = X1 , y = X2, color ="red"))+
geom_point(size =2)
str(st)
warnings()
View(st)
df.2
df.3
scatter3d( x = df.3$X1, y = df.3$X2,z = df.3$X3)
install.packages(c("rgl", "car"))
library(car)
library(rgl)
library(mgcv)
scatter3d( x = df.3$X1, y = df.3$X2,z = df.3$X3)
scatter3d( x = df.3$X1, y = df.3$X2,z = df.3$X3)
ggplot(df.2,aes(x = X1 , y = X2, color ="red"))+
geom_point(size =2)
#문2)
#R에서 제공하는 swiss 데이터셋을 차원 축소하여 2차원 산점도와 3차원
#산점도를 작성하시오.
class(swiss)
#문2)
#R에서 제공하는 swiss 데이터셋을 차원 축소하여 2차원 산점도와 3차원
#산점도를 작성하시오.
warnings()
(swiss)
class(swiss)
str(swiss)
View(swiss)
dup =which(duplicated(swiss))
dup
dim(swiss)
tsne <- Rtsne(dup,dim =2 , perplexity = 15 )
sw.2 <- Rtsne(sw,dim =2 , perplexity = 15 )#2차원 산점도
sw.3 <- Rtsne(sw,dim =3 , perplexity = 15 )#3차원 산점도
sw.2
class(swiss)
dim(swiss)
str(swiss)
View(swiss)
sw = which(duplicated(swiss))
dup
sw.2 <- Rtsne(sw,dim =2 , perplexity = 15 )#2차원 산점도
sw.3 <- Rtsne(sw,dim =3 , perplexity = 15 )#3차원 산점도
sw.2
sw
which(duplicated(swiss))
sw.2 <- Rtsne(swiss,dim =2 , perplexity = 15 )#2차원 산점도
sw.3 <- Rtsne(swiss,dim =3 , perplexity = 15 )#3차원 산점도
sw.2
class(sw.2)
dfsw.2 <- data.frame(sw.2$X1)
df.2 <- data.frame(sw.2$X1)
df.2
df.2 <- data.frame(sw.2$Y)
df.2
buildDictionary( ext_dic = 'woorimalsam' )
buildDictionary( ext_dic = 'woorimalsam' )
pa12 <- brewer.pal( 8, 'Dark2') #색상팔레트생성
library(wordcloud)
library(wordcloud2)
library(KoNLP)
library(RColorBrewer)
library(dplyr)
library(ggplot2)
buildDictionary( ext_dic = 'woorimalsam' )
pal2 <- brewer.pal( 8, 'Dark2') #색상팔레트생성
noun <- sapply(text,extractNoun,USE.NAMES = F ) #명사 추출
noun
pal2 <- brewer.pal( 8, 'Dark2') #색상팔레트생성
noun <- sapply(text,extractNoun,USE.NAMES = F ) #명사 추출
noun <- sapply(text,extractNoun, USE.NAMES = F ) #명사 추출
noun <- sapply( text,extractNoun, USE.NAMES = F ) #명사 추출
noun
text <- readLines( "mis_document.txt",encoding = "UTF-8")
text <- readLines( "mis_document.txt",encoding = "UTF-8")
setwd("C:/learnR/자료")
text <- readLines( "mis_document.txt",encoding = "UTF-8")
text   #읽어들인 파일에서 '명사'를 추출해야함
#우리말씀 사전 로드
buildDictionary( ext_dic = 'woorimalsam' )
pal2 <- brewer.pal( 8, 'Dark2') #색상팔레트생성
noun <- sapply( text,extractNoun, USE.NAMES = F ) #명사 추출
noun
noun
noun <- sapply( text, extractNoun, USE.NAMES = F ) #명사 추출
noun
noun <- sapply( text,extractNoun, USE.NAMES = F ) #명사 추출
noun
View(noun)
sort.noun <-  sort(wordcount, decreasing = T )[1:10]
wordcount <- table(noun2)
sort.noun <-  sort(wordcount, decreasing = T )[1:10]
noun2 <- unlist(noun)
wordcount <- table(noun2)
sort.noun <-  sort(wordcount, decreasing = T )[1:10]
barplot(sort.noun, names.arg = names(sort.noun),
col = 'steelblue',main = '빈도수 높은 단어',
ylab = '단어 빈도수 ')
barplot(sort.noun, names.arg = names(sort.noun),
col = 'steelblue',main = '빈도수 높은 단어',
ylab = '단어 빈도수 ')
sort.noun <-  sort.noun[ -1 ]
barplot(sort.noun, names.arg = names(sort.noun),
col = 'steelblue',main = '빈도수 높은 단어',
ylab = '단어 빈도수 ')
#extractNoun : 명사 추출 #USE.NAMES = F_행이름을 안쓰겠다
str(noun)
ggplot(df,
aes(x= df$noun2, y = df$Freq))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1      ))+
labs(x = "명사" , y = '단어 빈도수')+
geom_text( aes ( lable = df$Freq), hjust = -0.3 ) +
coord_flip()
df <- as.data.frame(sort.noun)
df
ggplot(df,
aes(x= df$noun2, y = df$Freq))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1      ))+
labs(x = "명사" , y = '단어 빈도수')+
geom_text( aes ( lable = df$Freq), hjust = -0.3 ) +
coord_flip()
df
ggplot(df,
aes(x= df$noun2, y = df$Freq))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1      ))+
labs(x = "명사" , y = '단어 빈도수')+
geom_text( aes ( lable = df$Freq), hjust = -0.3 ) +
coord_flip()
df <- as.data.frame(sort.noun)
df
ggplot(df,
aes(x= df$noun2, y = df$Freq))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어 빈도수')+
geom_text( aes ( lable = df$Freq), hjust = -0.3 ) +
coord_flip()
df <- as.data.frame(sort.noun)
df
ggplot(df,
aes(x= df$noun2, y = df$Freq))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어 빈도수')+
geom_text( aes (lable = df$Freq), hjust = -0.3 ) +  #빈도표시
coord_flip()
df <- as.data.frame(sort.noun)
df
ggplot(df,
aes(x= df$noun2, y = df$Freq))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어빈도수')+
geom_text( aes (lable = df$Freq), hjust = -0.3 ) +  #빈도표시
coord_flip()
barplot(sort.noun, names.arg = names(sort.noun),
col = 'steelblue',main = '빈도수 높은 단어',
ylab = '단어빈도수 ')
ggplot(df,
aes(x= df$noun2, y = df$Freq))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어빈도수')+
geom_text( aes (lable = df$Freq), hjust = -0.3 ) +  #빈도표시
coord_flip()
ggplot(df,
aes(x= df$noun2, y = df$Freq))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어빈도수')+
geom_text( aes (lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
df <- as.data.frame(sort.noun)
df
ggplot(df,
aes(x= df$noun2, y = df$Freq ))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어빈도수')+
geom_text( aes (lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
wordcloud( names( wordcount ),
freq = wordcount,
scale = c(6, 0.7),
min.freq = 3,
random.order = F,
rot.per = .1 ,
colors = pal2
wordcloud( names( wordcount ),
freq = wordcount,
scale = c(6, 0.7),
min.freq = 3,
random.order = F,
rot.per = .1 ,
colors = pal2)
noun2 <- unlist(noun) #추출한게 리스트 형식이니 그것을 vector화
wordcount <- table(noun2)
sort.noun <-  sort(wordcount, decreasing = T )[1:10] # 빈도 내림차순 , 상위 10개
sort.noun
sort.noun <-  sort.noun[ -1 ] #공백제거
barplot(sort.noun, names.arg = names(sort.noun),
col = 'steelblue',main = '빈도수 높은 단어',
ylab = '단어빈도수 ')
df <- as.data.frame(sort.noun)
df
ggplot(df,
aes(x= df$noun2, y = df$Freq ))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어빈도수')+
geom_text( aes (lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
gplot(df,
aes(x= df$noun2, y = df$Freq ))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어빈도수')+
geom_text( aes (lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
ggplot(df, aes(x= df$noun2, y = df$Freq ))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어빈도수')+
geom_text( aes (lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
df <- as.data.frame( sort.noun )
df
ggplot(df, aes(x= df$noun2, y = df$Freq ))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어빈도수')+
geom_text( aes (lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
ggplot(df, aes( x= df$noun2, y = df$Freq ))+
geom_bar(stat = "identity",
width =0.7 ,
fill = "steelblue")+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust =0,
vjust = 1))+
labs(x = "명사" , y = '단어빈도수')+
geom_text( aes (lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
ggplot(df, aes( x= df$noun2, y = df$Freq ))+
geom_bar( stat = "identity",
width =0.7,
fill = "steelblue" )+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust = 0,
vjust = 1 ))+
labs(x = "명사" , y = '단어빈도수') +
geom_text( aes ( lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
wordcloud( names( wordcount ),   #출력할 단어
freq = wordcount,     #단어빈도
scale = c(6, 0.7),     #단어폰트크기(최대,최소 )
min.freq = 3,          #단어최소빈도
random.order = F,     #단어출력위치
rot.per = .1 ,       #90도 회전단어비율
colors = pal2)         #단어 색
)
#extractNoun : 명사 추출 #USE.NAMES = F_행이름을 안쓰겠다
str(noun)
noun2 <- unlist(noun) #추출한게 리스트 형식이니 그것을 vector화
wordcount <- table(noun2)
sort.noun <-  sort(wordcount, decreasing = T )[1:10] # 빈도 내림차순 , 상위 10개
sort.noun
sort.noun <-  sort.noun[ -1 ] #공백제거
barplot(sort.noun, names.arg = names(sort.noun),
col = 'steelblue',main = '빈도수 높은 단어',
ylab = '단어빈도수 ')
df <- as.data.frame( sort.noun )
df
ggplot(df, aes( x= df$noun2, y = df$Freq ))+
geom_bar( stat = "identity",
width =0.7,
fill = "steelblue" )+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust = 0,
vjust = 1 ))+
labs(x = "명사" , y = '단어빈도수') +
geom_text( aes ( lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
pal3 <- brewer.pal(9,"Blues") [5:9]
wordcloud( names( wordcount ),   #출력할 단어
freq = wordcount,     #단어빈도
scale = c(6, 0.7),     #단어폰트크기(최대,최소 )
min.freq = 3,          #단어최소빈도
random.order = F,     #단어출력위치
rot.per = .1 ,       #90도 회전단어비율
colors = pal3)         #단어 색
df <- as.data.frame( sort.noun )
df
ggplot(df, aes( x= df$noun2, y = df$Freq ))+
geom_bar( stat = "identity",
width =0.7,
fill = "steelblue" )+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust = 0,
vjust = 1 ))+
labs(x = "명사" , y = '단어빈도수') +
geom_text( aes ( lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
## word cloud 작성
wordcloud( names( wordcount ),   #출력할 단어
freq = wordcount,     #단어빈도
scale = c(6, 0.7),     #단어폰트크기(최대,최소 )
min.freq = 3,          #단어최소빈도
random.order = F,     #단어출력위치
rot.per = .1 ,       #90도 회전단어비율
colors = pal2)         #단어 색
df <- as.data.frame( sort.noun )
df
ggplot(df, aes( x= df$noun2, y = df$Freq ))+
geom_bar( stat = "identity",
width =0.7,
fill = "steelblue" )+
ggtitle('빈도수 높은 단어')+
theme( plot.title = element_text (size = 25,
face = "bold",
colour = "steelblue",
hjust = 0,
vjust = 1 ))+
labs(x = "명사" , y = '단어빈도수') +
geom_text( aes ( lable = df$Freq ), hjust = -0.3 ) +  #빈도표시
coord_flip()
