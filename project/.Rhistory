scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# turn ggplot interactive with plotly
pp <- ggplotly(p, tooltip="text")
pp
# save the widget
# library(htmlwidgets)
# saveWidget(pp, file=paste0( getwd(), "/HtmlWidget/ggplotlyBubblechart.html"))
ibrary(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
install.packages("plotly")
install.packages("viridis")
install.packages("hrbrthemes")
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
install.packages("gapminder")
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
source('C:/learnR/필기/20191209.R', encoding = 'UTF-8', echo=TRUE)
install.packages("tidyverse")
install.packages("tidyverse")
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# The dataset is provided in the gapminder library
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Interactive version
p <- data %>%
mutate(gdpPercap=round(gdpPercap,0)) %>%
mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# turn ggplot interactive with plotly
pp <- ggplotly(p, tooltip="text")
pp
# save the widget
# library(htmlwidgets)
# saveWidget(pp, file=paste0( getwd(), "/HtmlWidget/ggplotlyBubblechart.html"))
head(GNI2014)
treemap( GNI2014, index = c( 'continent', 'iso3'), #계층구조_ 대륙 밑에 국가별로 계층화해라
vSize ='population',                               #타일크기_ 인구가 많으면 타일이 크게해라
vColor = 'GNI',                                    #타일색깔_ GNI에 따라 색을 결정
type = 'value',                                    #타일컬러링방법
bg.labels = 'yellow',                              #레이블배경색_ 글씨 배경색
title = "World's GNI")
treemap( st,
index = c( "stname" ),
vSize = "Area",         VColor = "Income",
type = "value",
title= "미국 주별 수입")
#다시해보기
treemap( st,
index = c( "stname" ),
vSize = "Area",         vColor = "Income",
type = "value",
title= "미국 주별 수입")
mtcars
View(mtcars)
View(mtcars)
class(mtcars)
gr <- data.frame(mtcars)
ggplot(df,aes(x = month, y = rain))+  #aes안에 x와 y 좌표 설정해주기 _ ggplot에 넣거나 그래프 함수 안에 넣거나 상관없음
geom_bar(stat = "identity", #막대높이
width = 0.7 ,      #막대폭
fill = "steelblue")  # 그래프 채움 색
month <- c(1,2,3,4,5,6)
rain <- c(55,50,45,50,60,70)
df <- data.frame(month,rain)
ggplot(df,aes(x = month, y = rain))+  #aes안에 x와 y 좌표 설정해주기 _ ggplot에 넣거나 그래프 함수 안에 넣거나 상관없음
geom_bar(stat = "identity", #막대높이
width = 0.7 ,      #막대폭
fill = "steelblue")  # 그래프 채움 색
##가로 그래프
ggplot(gr,aes( x = gr$gear))+
geom_bar( fill = "black")+
labs( x = "기어의 수 ", y = "빈도수 ")
ggplot(mtcars,aes( x = mtcars$cyl)) +
geom_bar(fill = "green")
ggplot(mtcars,aes( x =  mtcars$mpg ))+
geom_bar(width = 5.0)
ggplot(mtcars,aes( x =  mtcars$mpg ))+
geom_histogram(bindwidth = 5.0)
ggplot(mtcars,aes( x =  mtcars$mpg ))+
geom_histogram(binwidth = 5.0)
#문4)
#R에서 제공하는 trees 데이터셋의 Girth(나무 둘레)에 대해 ggplot으로
#히스토그램을 작성하시오. 여기에서는 히스토그램의 제목, x축 레이블, y축
#레이블을 한글로 표시하시오. (구간 간격은 3.0, 막대의 색은 steelblue로 한다.)
data("trees")
ggplot(trees, aes(x = Girth))+
geom_histogram(binwidth = 3.0, fill = "steelblue")+
ggtitle("나무둘레")+
labs( x = "나무둘레" , y = "나무둘레")
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
ggtitle("월별 강수량") +
theme(plot.title = element_text(size =25,
face = "bold",
colour = "steelblue")) +
labs( x= "월", y ="강수량") + coord_flip()
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
ggtitle("월별 강수량") +
theme(plot.title = element_text(size =25,
face = "bold",
colour = "steelblue")) +
labs( x= "월", y ="강수량") + coord_flip()
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
ggtitle("월별 강수량") +
theme(plot.title = element_text(size =25,
face = "bold",
colour = "steelblue")) +
labs( x= "월", y ="강수량") + coord_flip()
ggplot(df,aes(x = month, y = rain))+  #aes안에 x와 y 좌표 설정해주기 _ ggplot에 넣거나 그래프 함수 안에 넣거나 상관없음
geom_bar(stat = "identity", #막대높이
width = 0.7 ,      #막대폭
fill = "steelblue")  # 그래프 채움 색
ggplot(trees, aes(x = Girth))+
geom_histogram(binwidth = 3.0, fill = "steelblue")+
ggtitle("나무둘레")+
labs( x = "나무둘레" , y = "나무둘레")
View(trees)
ggplot(mtcars,aes( x = mtcars$mpg, y = mtcars$wt, color = mtcars$gear))+
geom_point(size = 3)
ggplot(mtcars,aes( x = mtcars$mpg, y = mtcars$wt, color = mtcars$gear))+
geom_point(size = 3)+
ggtitle("연비와 중량")+
theme(plot.title = element_text((size = 29,face = "bold")))
ggplot(mtcars,aes( x = mtcars$mpg, y = mtcars$wt, color = mtcars$gear))+
geom_point(size = 3)+
ggtitle("연비와 중량")+
theme(plot.title = element_text((size = 29 , face = "bold")))
theme(plot.title = element_text((size = 29 , face = "bold"))
ggplot(mtcars,aes( x = mtcars$mpg, y = mtcars$wt, color = mtcars$gear))+
geom_point(size = 3)+
ggtitle("연비와 중량")+
theme(plot.title = element_text((size = 29 ), face = "bold"))
ggplot(mtcars,aes(y= mtcars$mpg))+
geom_boxplot()
ggplot(mtcars,aes(y= mtcars$mpg,fill = mtcars$cyl))+
geom_boxplot()
ggplot(mtcars,aes(y= mtcars$mpg,fill =$cyl))+
geom_boxplot()
ggplot(mtcars,aes(y= mtcars$mpg,fill =cyl))+
geom_boxplot()
ggplot(mtcars,aes(y= mtcars$mpg))+
geom_boxplot(fill =cyl)
ggplot(mtcars,aes(y= mtcars$mpg))+
geom_boxplot(fill = mtcars$cyl)
#aes의 안에는 xy좌표나 그것들 성질 등등
ggplot( data = iris, mapping = aes(y= Petal.Length, fill = Species))+
geom_boxplot()
ggplot(mtcars,aes(y= mtcars$mpg),fill = mtcars$cyl)+
geom_boxplot()
ggplot(mtcars,aes(y= mtcars$mpg)
ggplot(mtcars,aes(y= mtcars$mpg))+
geom_boxplot()
ggplot(mtcars,aes( x= mtcars$mpg))+
geom_boxplot()
ggplot(mtcars,aes( y= mtcars$mpg))+
geom_boxplot()
df <- (year,pop)
year <- 2015:2026
pop <- c(51014,51245,51446,51635,51811,51973,
52123,52261,52388,52504,52609,52704)
df <- (year,pop)
df <- data.frame(year,pop)
ggplot(data = df, aes( x = year , y = pop))+
geom_line(col = "black")
ggplot(data = df, aes( x = year , y = pop))+
geom_line(col = "black")+
labs(x = "연도", y = " 인구수 ")
ggplot(data = df, aes( x = year , y = pop))+
geom_line(col = "black")+
labs(x = "연도", y = " 인구수 ")+
ggtitle(" 인구 추이")
us <- data.frame(state.x77, state.division)
str(state.x77)
head(state.x77)
head(state.division)
head(state.division)
us <- data.frame(state.x77, state.division)
head(state.x77)
us
us
head(us)
#(1) 미국 50개 주에 대해 각각의 주들이 지역구분별로 묶인 트리맵을 작성하시오.
#또한, 타일의 면적은 Population(인구수), 타일의 색은 Income(소득)으로 나타내고,
#각각의 타일에는 주의 이름을 표시하시오. 마지막으로 이 트리맵에서 관찰할 수 있
#는 것이 무엇인지 설명하시오
treemap(us,index= c('state.division'),vSize = 'population',
vColor = 'Income',type ='value',bg.labels = "white",title = 'United states')
treemap(us,index= c('state.division'),vSize = 'population',
vColor = 'Income',type ='value',bg.labels = "white",
title = 'United states')
head(us)
#(1) 미국 50개 주에 대해 각각의 주들이 지역구분별로 묶인 트리맵을 작성하시오.
#또한, 타일의 면적은 Population(인구수), 타일의 색은 Income(소득)으로 나타내고,
#각각의 타일에는 주의 이름을 표시하시오. 마지막으로 이 트리맵에서 관찰할 수 있
#는 것이 무엇인지 설명하시오
treemap(us,index= c('state.division'),vSize = 'Population',
vColor = 'Income',type ='value',bg.labels = "white",
title = 'United states')
treemap(us,index = c ( "state.division"),vSize = 'HS.Grad' ,
vColor = 'Murder', type = 'value',bg.labels = "black")
treemap(us,index = c ( "state.division"),vSize = 'HS.Grad' ,
vColor = 'Murder', type = 'value',bg.labels = "black",
title = "hs grad rate ")
##산점도에 Bubble 추가 ( BUBBLE CHART)
#보통 산점도에 사용함
symbols(st$Illiteracy,st$Murder,        #원의 xy 좌표
circles = st$Population,         #원의 반지름
inches = 0.3,                    #원크기 조절값
fg = "white",                    #원 테두리 색
bg = " lightgray",               #원 바탕색
lwd = 1.5,                       #원 테두리선 두께
xlab = "rate of Illiteracy",
ylab = "crime( murder) rate",
main = "Illteracy and Crime")
text(st$Illiteracy,st$Murder,           #텍스트출력 xy좌표
rownames( st ),                    #출력할 text
cex = 0.6,                         #폰트크기
col = "brown")       #폰트컬러
#(3) us 데이터셋에 대해 x축은 Income(소득), y축은 Illiteracy(문맹률), 원의 크기는
#Population(인구수), 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버
#블차트를 작성하시오. 또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하
#시오.
symbols(us$Income,us$Illiteracy,circles = st$Population, bg = "green",
)
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
#(3) us 데이터셋에 대해 x축은 Income(소득), y축은 Illiteracy(문맹률), 원의 크기는
#Population(인구수), 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버
#블차트를 작성하시오. 또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하
#시오.
symbols(us$Income,us$Illiteracy,circles = st$Population, bg = "green", inches = 0.3)
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
symbols(us$Income,us$Illiteracy,circles = st$Population, bg = "green", inches = 0.8)
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
symbols(us$Income,us$Illiteracy,circles = st$Population, bg = "green", inches = 0.5)
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
symbols(us$Income,us$Illiteracy,circles = st$Population, bg = "green", inches = 0.6)
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
text(st$Income,st$Illiteracy,rownames(us),cex = 0.3 , col = "black")
text(st$Income,st$Illiteracy,rownames(us),cex = 0.5 , col = "black")
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
symbols(us$Illiteracy,us$Murder,circles = us$Area, bg = "green")
symbols(us$Illiteracy,us$Murder,circles = us$Area, bg = "green", inches = 0.3)
symbols(us$Illiteracy,us$Murder,circles = us$Area, bg = "green", inches = 0.5)
symbols(us$Illiteracy,us$Murder,circles = us$Area, bg = "green", inches = 0.9)
text(st$Illiteracy,us$Murder,rownames(us))
text(st$Illiteracy,us$Murder,rownames(us),cex = 1.0)
text(st$Illiteracy,us$Murder,rownames(us),cex = 0.5)
symbols(us$Illiteracy,us$Murder,circles = us$Area, bg = "green", inches = 0.9)
text(st$Illiteracy,us$Murder,rownames(us),cex = 0.5)
text(st$Illiteracy,us$Murder,rownames(us),cex = 0.8)
symbols(us$Illiteracy,us$Murder,circles = us$Area, bg = "green", inches = 0.9)
text(st$Illiteracy,us$Murder,rownames(us),cex = 0.8)
treemap(us,index= c('state.division'),vSize = 'Population',
vColor = 'Income',type ='value',bg.labels = "white",
title = 'United states')
treemap(us,index = c ( "state.division"),vSize = 'HS.Grad' ,
vColor = 'Murder', type = 'value',bg.labels = "black",
title = "hs grad rate ")
#시오.
symbols(us$Income,us$Illiteracy,circles = st$Population, bg = "green", inches = 0.6)
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
symbols(us$Income,us$Illiteracy,circles = st$Population, bg = "green", inches = 0.6)
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
symbols(us$Illiteracy,us$Murder,circles = us$Area, bg = "green", inches = 0.9)
text(st$Illiteracy,us$Murder,rownames(us),cex = 0.8)
class(mtcars$cyl)
cy <- as.factor(mtcars$cyl)
class(cy)
ggplot(mtcars,aes( y= mtcars$mpg), fill = cy)+
geom_boxplot()
cy
#한그래프 안에 세개의 box plot
#aes의 안에는 xy좌표나 그것들 성질 등등
ggplot( data = iris, mapping = aes(y= Petal.Length, fill = Species))+
geom_boxplot()
class(mtcars$cyl)
cy <- as.factor(mtcars$cyl)
class(cy)
ggplot(mtcars,aes( y= mtcars$mpg), fill = cy)+
geom_boxplot()
ggplot(mtcars,aes( y=mpg), fill = cy)+
geom_boxplot()
ggplot(mtcars,aes( y=mtcars$mpg), fill = cy, position = "dodge")+
geom_boxplot()
class(mtcars$cyl)
cy <- as.factor(mtcars$cyl)
class(cy)
ggplot(mtcars,aes( y=mtcars$mpg), fill = cy, position = "dodge")+
geom_boxplot()
ggplot(mtcars,aes( y=mpg), fill = cy)+
geom_boxplot()
ggplot(data = mtcars,aes( y=mpg), fill = cy)+
geom_boxplot()
ggplot(data = mtcars,aes( y=mpg), fill = cy)+
geom_boxplot()
ggplot(data = mtcars,mapping = aes( y=mpg), fill = cy)+
geom_boxplot()
ggplot(data = mtcars,mapping = aes( y=mpg), fill = cy)+
geom_boxplot()
ggplot(data = mtcars,mapping = aes( y = mpg), fill = cy)+
geom_boxplot()
class(mtcars$cyl)
class(cy)
ggplot(data = mtcars,mapping = aes( y = mpg), fill = cy)+
geom_boxplot()
geom_boxplot()
ggplot(data = mtcars,mapping = aes( y = mpg, fill = cy)) +
geom_boxplot()
text(st$Income,st$Illiteracy,rownames(us),cex = 0.8 , col = "black")
