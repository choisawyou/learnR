install.packages(c("gapminder", "ggplot2", "hrbrthemes", "plotly", "tidyverse", "treemap", "viridis"))
install.packages("tidyverse")
dim(mpg)
library(tidyverse)  # library와 require 동일한 기능
dim(mpg)
dim(mpg)
str(mpg)
head(mpg)
#함수를 기본적으로 2개
#ggplot은  기본함수 / LAYER 방식 eg) ggplot 깔고 geom_histogram깔고 theme깔고
#반드시 플러스 연산으로 함수 연결 必
#그래프 함수는 다 geom으로 시작
#ggplot 은 data frame 으로 실행 해야함
#그래프를 그릴 때에는 data와 mapping은 필수값 *
ggplot( data = mpg ) +
geom_point( mapping = aes( x = displ, y = hwy)) #산점도 그리는 함수
ggplot( data = mpg)+(
geom_point(aes(x = displ , y = hwy)))
ggplot(df,aes(x = month, y = rain))+  #aes안에 x와 y 좌표 설정해주기 _ ggplot에 넣거나 그래프 함수 안에 넣거나 상관없음
geom_bar(stat = "identity", #막대높이
width = 0.7 ,      #막대폭
fill = "steelblue")  # 그래프 채움 색
month <- c(1,2,3,4,5,6)
rain <- c(55,50,45,50,60,70)
df <- data.frame(month,rain)
ggplot(df,aes(x = month, y = rain))+  #aes안에 x와 y 좌표 설정해주기 _ ggplot에 넣거나 그래프 함수 안에 넣거나 상관없음
geom_bar(stat = "identity", #막대높이
width = 0.7 ,      #막대폭
fill = "steelblue")  # 그래프 채움 색
month <- c(1,2,3,4,5,6)
rain <- c(55,50,45,50,60,70)
df <- data.frame(month,rain)
ggplot(df,aes(x = month, y = rain))+  #aes안에 x와 y 좌표 설정해주기 _ ggplot에 넣거나 그래프 함수 안에 넣거나 상관없음
geom_bar(stat = "identity", #막대높이
width = 0.7 ,      #막대폭
fill = "steelblue")  # 그래프 채움 색
mr <- data.frame(month,rain)
ggplot(data = mr, mapping = aes(x = month, y = rain))+
geom_bar(stat = "identity"),width = 0.2,fill = "steelgreen")
ggplot(data = mr, mapping = aes(x = month, y = rain))+
geom_bar(stat = "identity",width = 0.2,fill = "steelgreen")
ggplot(data = mr, mapping = aes(x = month, y = rain))+
geom_bar(stat = "identity",width = 0.2,fill = "black")
ggplot(data = mr, mapping = aes(x = month, y = rain))+
geom_bar(width = 0.2,fill = "black")
ggplot(data = mr, mapping = aes(x = month, y = rain))+
geom_bar(stat = "identity",width = 0.2,fill = "black")
month <- 1:3
rain <- c(20,30,60)
mr <- data.frame(month,rain)
ggplot(data = mr, mapping = aes(x = month, y = rain))+
geom_bar(stat = "identity",width = 0.2,fill = "black")
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
ggtitle("월별 강수량") +
theme(plot.title = element_text(size =25,
face = "bold",
colour = "steelblue")) +
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
ggtitle("월별 강수량") +
theme(plot.title = element_text(size =25,
face = "bold",
colour = "steelblue")) +
labs( x= "월", y ="강수량") + coord_flip()
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
month <- c(1,2,3,4,5,6)
rain <- c(55,50,45,50,60,70)
df <- data.frame(month,rain)
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
ggtitle("월별 강수량") +
theme(plot.title = element_text(size =25,
face = "bold",
colour = "steelblue")) +
labs( x= "월", y ="강수량") + coord_flip()
ggplot(df,aes(x= month, y = rain))+
geom_bar(stat="identity",width = 0.3 )+
ggtitle("rain/month")+
theme(plot.title = element_line(colour = "red",size = 25))
ggplot(df,aes(x= month, y = rain))+
geom_bar(stat="identity",width = 0.3 )+
ggtitle("rain/month")+
theme(plot.title = element_text(colour = "red",size = 25))
month <- c(1,2,3,4,5,6)
rain <- c(55,50,45,50,60,70)
df <- data.frame(month,rain)
ggplot(df,aes(x= month, y = rain))+
geom_bar(stat="identity",width = 0.3 )+
ggtitle("rain/month")+
theme(plot.title = element_text(colour = "red",size = 25))
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
ggtitle("월별 강수량") +
theme(plot.title = element_text(size =25,
face = "bold",
colour = "steelblue")) + coord_flip()
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
ggtitle("월별 강수량") +
theme(plot.title = element_text(size =25,
face = "bold",
colour = "steelblue"))
ggplot(df,aes( x = month, y = rain))+
geom_bar(stat = "identity",
width = 0.7 ,
fill = "steelblue")+
ggtitle("월별 강수량") +
theme(plot.title = element_text(size =25,
face = "bold",
colour = "steelblue")) +coord_flip()
ggplot(iris, aes( x = Petal.Length))+
geom_histogram(binwidth = 0.5)
ggplot(iris,aes(x = Sepal.Width, fill = Species,
color = Species))+
geom_histogram(binwidth = 0.2,position = "dodge")
ggplot(iris,aes(x = Sepal.Width, fill = Species                ))+
geom_histogram(binwidth = 0.2,position = "dodge")
ggplot(iris,aes(x = Sepal.Width, fill = Species                ))+
geom_histogram(binwidth = 0.2,position = "dodge")
ggplot(iris,aes(x = Sepal.Width, fill = Species, color = Species        ))+
geom_histogram(binwidth = 0.2,position = "dodge")
ggplot( iris, aes(x = Sepal.Width , fill = Species, color = "black"))
ggplot( iris, aes(x = Sepal.Width , fill = Species, color = "black"))+
geom_histogram(binwidth = 0.3, position = "dodge")+
theme(legend.position = "bottom")
ggplot( iris, aes(x = Sepal.Width , fill = Species, color = "red"))+
geom_histogram(binwidth = 0.3, position = "dodge")+
theme(legend.position = "bottom")
ggplot( iris, aes(x = Sepal.Width , fill = Species, color = "white"))+
geom_histogram(binwidth = 0.3, position = "dodge")+
theme(legend.position = "bottom")
ggplot( iris, aes(x = Sepal.Width , fill = Species, color = "yellow"))+
geom_histogram(binwidth = 0.3, position = "dodge")+
theme(legend.position = "bottom")
ggplot( data = iris, mapping = aes( x = Petal.Length,
y = Petal.Width ) ) +
geom_point()
##산점도
# color를 aes안에 넣으면 색 지정 가능
class(iris$Species)
ggplot( data = iris, mapping = aes( x = Petal.Length,
y = Petal.Width,
color = Species
ggplot( data = iris, mapping = aes( x = Petal.Length,
y = Petal.Width,
color = Species,
shape = Species )) +
geom_point(
size = 3) +
ggtitle("꽃잎의 길이와 폭 ") +
theme( plot.title = element_text(size = 25,
face = "bold",
colour = "green"))
iris
iris
ggplot( data = iris, mapping = aes( x = Petal.Length,
y = Petal.Width,
color = Species,
shape = Species )) +
geom_point(
size = 3) +
ggtitle("꽃잎의 길이와 폭 ") +
theme( plot.title = element_text(size = 25,
face = "bold",
colour = "green"))
ggplot(iris, aes ( x = Petal.Length , y = Petal.Width, color = Species ,
fill = Species , shape = Species))+
geom_point(plot.title = "꽃잎의 길이와 폭")+
theme(plot.title = element_text(face = "bold", colour = "green"))
##ggplot, Boxplot
#boxplot은y만 지정 , 가로폭은 의미없음
#
ggplot( data = iris, mapping = aes(y= Petal.Length))+
geom_boxplot(fill = "yellow")
#한그래프 안에 세개의 box plot
#aes의 안에는 xy좌표나 그것들 성질 등등
ggplot( data = iris, mapping = aes(y= Petal.Length, fill = Species))+
geom_boxplot()
ggplot( iris, aes ( y = Petal.Length , fill = Species))+
geom_boxplot(())
ggplot( iris, aes ( y = Petal.Length , fill = Species))+
geom_boxplot()
ggplot(df,aes( x = year, y = cnt)) +
geom_line(col = "red")
year <- 1937:1960
cnt <- as.vector(airmiles)
df <- data.frame(year,cnt)
head(df)
ggplot(df,aes( x = year, y = cnt)) +
geom_line(col = "red")
class(airmiles)
airmiles
##영역 지정 및 화살표 표시
#annotate _ rect은 모양 , alpha는 투명도  0~1사이 1에 가까울수록 불투명
ggplot( mtcars, aes( x= wt, y = mpg))+
geom_point()+
annotate("rect",
xmin = 3,
xmax = 4,
ymin = 12,
ymax = 21,
alpha = 0.5,
fill = "skyblue") +
annotate("segment", x= 2.5 , xend = 3.7,        #화살표 표시 추가
y = 10, yend = 17, color = "red",      #segment _ 화살표
arrow = arrow() )  +                   #화살표 길이 _x,xend,y,yend
annotate( "text", x = 2.5, y = 10, label = "point")     #텍스트 추가
ggplot(df,aes(x=year, y = cnt))+
geom_line(col = "orange", lwd =2)+
ggtitle("제주 청년층(18~34세) 전입 인구 ") +
theme( plot.title = element_text(size = 24,
face = "bold",
colour = "Dark Orange"))+
labs(x = '년도' , y = '전입 청년인구 수')
#Team PRJ
library(dplyr)
library(ggplot2)
setwd("C:/Bigdata Maestro/learnR/project/FinalTeamPRJ/인구")
pop <- read.csv("시도 각 세별 이동자수 13-18.csv",header = F,as.is = T)
ggplot(df,aes(x=year, y = cnt))+
geom_line(col = "orange", lwd =2)+
ggtitle("제주 청년층(18~34세) 전입 인구 ") +
theme( plot.title = element_text(size = 24,
face = "bold",
colour = "Dark Orange"))+
labs(x = '년도' , y = '전입 청년인구 수')
ggplot(df,aes(x=year, y = cnt))+
geom_line(col = "orange", lwd =2)+
ggtitle("제주 청년층(18~34세) 전입 인구 ") +
theme( plot.title = element_text(size = 24,
face = "bold",
colour = "Dark orange"))+
labs(x = '년도' , y = '전입 청년인구 수')
ggplot(df,aes(x=year, y = cnt))+
geom_line(col = "orange", lwd =2)+
ggtitle("제주 청년층(18~34세) 전입 인구 ") +
theme( plot.title = element_text(size = 24,
face = "bold",
colour = "orange"))+
labs(x = '년도' , y = '전입 청년인구 수')
ggplot(df,aes(x=year, y = cnt))+
geom_line(col = "orange", lwd =2)+
ggtitle("제주 청년층(18~34세) 전입 인구 ") +
theme( plot.title = element_text(size = 24,
face = "bold",
colour = "Orange"))+
labs(x = '년도' , y = '전입 청년인구 수')
#Team PRJ
library(dplyr)
library(ggplot2)
setwd("C:/Bigdata Maestro/learnR/project/FinalTeamPRJ/인구")
setwd("C:/Bigdata Maestro/learnR/project/FinalTeamPRJ")
pop <- read.csv("제주산업별 매출액16-17.csv",header = F,as.is = T)
income <- read.csv("제주산업별 매출액16-17.csv",header = F,as.is = T)
View(income)
income <- read.csv("제주산업별 매출액16-17.csv",header = F,as.is = T)
View(income)
income <- read.csv("제주산업별 매출액16-17.csv",header = F,as.is = T)
View(income)
colnames(income) <- c('지역','산업','2016','2017')
View(income)
income <- income[-c(1:2)]
income <- income[-c(1:2),]
View(income)
setwd("C:/Bigdata Maestro/learnR/project/FinalTeamPRJ")
income <- read.csv("제주산업별 매출액16-17.csv",header = F,as.is = T)
View(income)
colnames(income) <- c('지역','산업','2016','2017')
income <- income[-c(1:2),]
View(income)
setwd("C:/Bigdata Maestro/learnR/project/FinalTeamPRJ")
income <- read.csv("제주산업별 매출액16-17.csv",header = F,as.is = T)
View(income)
income <- income[-c(1:2),]
View(income)
colnames(income) <- c('지역','산업','2016','2017')
income <- income[-c(1:2),]
View(income)
setwd("C:/Bigdata Maestro/learnR/project/FinalTeamPRJ")
income <- read.csv("제주산업별 매출액16-17.csv",header = F,as.is = T)
View(income)
colnames(income) <- c('지역','산업','2016','2017')
income <- income[-c(1:2),]
year <- 2016:2017
#abline :사선을 그을 때 쓰는 함수
ggplot(income,aes(x=year, y = income[1,c(3:4)]))
#abline :사선을 그을 때 쓰는 함수
ggplot(income,aes(x=year, y = income[1,c(3:4)]))+
geom_line()
rownames(income) <- c('농업, 임업 및 어업',
'광업',
'제조업',
' 전기, 가스, 증기 및 공기조절 공급업',
'수도, 하수 및 폐기물 처리, 원료 재생업',
'건설업',
'도매 및 소매업',
'운수 및 창고업',
'숙박 및 음식점업',
'정보통신업',
'금융 및 보험업',
'부동산업',
'전문, 과학 및 기술 서비스업',
'사업시설 관리, 사업 지원 및 임대 서비스업',
'공공행정, 국방 및 사회보장 행정',
'교육 서비스업',
'보건업 및 사회복지 서비스업',
'예술, 스포츠 및 여가관련 서비스업',
'협회 및 단체, 수리 및 기타 개인 서비스업')
rownames(income) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업','수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업','숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업','사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업','보건업 및 사회복지 서비스업','예술, 스포츠 및 여가관련 서비스업','협회 및 단체, 수리 및 기타 개인 서비스업')
rownames(income) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업','수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업','숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업','사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업','보건업 및 사회복지 서비스업','예술, 스포츠 및 여가관련 서비스업','협회 및 단체, 수리 및 기타 개인 서비스업')
rownames(income) <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)
dim(income)
View(income)
#abline :사선을 그을 때 쓰는 함수
ggplot(income,aes(x=year, y = '2016')
geom_line()
#abline :사선을 그을 때 쓰는 함수
ggplot(income,aes(x=year, y = 2016)+
#abline :사선을 그을 때 쓰는 함수
ggplot(income,aes(x=year, y = 2016))+
geom_line()
ggplot(income,aes(x=year, y = 2016))+
geom_line()
#abline :사선을 그을 때 쓰는 함수
a.1 <- income[c(2,c(3:4))]
a.1ggplot(income,aes(x=year, y = 2016))+
geom_line()
a.1
a.1
#abline :사선을 그을 때 쓰는 함수
a.1 <- income[2,c(3:4)]
a.1
ggplot(income,aes(x=year, y = a.1))+
geom_line()
#abline :사선을 그을 때 쓰는 함수
a.1 <- c(income[2,c(3:4)])
a.1
income <- as.numeric(income[,c(3:4)])
str(income)
income[,c(3:4)] <- as.numeric(income[,c(3:4)])
income$`2016` <- as.numeric(income$`2016`)
str(income)
income$`2017` <- as.numeric(income$`2017`)
str(income)
#abline :사선을 그을 때 쓰는 함수
a.1 <- c(income[2,c(3:4)])
a.1
ggplot(income,aes(x=year, y = a.1))+
geom_line()
ggplot(income,aes(x=year, y = income$`2016`))+
geom_line()
ggplot(income,aes(x=year, y = c(income$`2016`,income$`2017`)))+
geom_line()
ggplot(income,aes(x=year, y = income[2,c(income$`2016`,income$`2017`)])+
ggplot(income,aes(x=year, y = income[2,c(income$`2016`,income$`2017`)])+
geom_line()
value <- income[,-c(1:2)]
value <- income[,-c(1:2)]
View(value)
rownames(value) <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)
value$1
value[1,1]
value[1,]
ggplot(income,aes(x=year, y = value[1,1])+
ggplot(income,aes(x=year, y = value[1,1]))+
geom_line()
ggplot(income,aes(x=year, y = value[1,1]))+
geom_line()
rownames(value) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업','수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업','숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업','사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업','보건업 및 사회복지 서비스업','예술, 스포츠 및 여가관련 서비스업','협회 및 단체, 수리 및 기타 개인 서비스업')
row.names(value) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업','수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업','숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업','사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업','보건업 및 사회복지 서비스업','예술, 스포츠 및 여가관련 서비스업','협회 및 단체, 수리 및 기타 개인 서비스업')
rownames(value) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업',
'수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업',
'숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업',
'사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업',
'보건업 및 사회복지 서비스업','예술, 스포츠 및 여가관련 서비스업','협회 및 단체, 수리 및 기타 개인 서비스업')
t(income)
ab <- t(income)
View(ab)
ab[-1,]
ab <- ab[-1,]
View(ab)
df <- data.frame(year,income[2,c(3:4))
df <- data.frame(year,income[2,c(3:4)]
df <- data.frame(year,income[2,c(3:4)])
df
df
View(df)
a <- c(576442,585443)
df <- data.frame(year,a)
ggplot(df,aes(x=year, y =a ))+
geom_line()
ggplot(df,aes(x=year, y =a ))+
geom_line()
View(df)
ab <- ab[-1,]
View(ab)
colnames(ab) <- c('t1','t2','t3','t4','t5','t6','t7','t8','t9','t10','t11','t12','t13','t14','t15','t16','t17','t18','t19')
colnames(ab) <- c('t1','t2','t3','t4','t5','t6','t7','t8','t9','t10','t11','t12','t13','t14','t15','t16','t17','t18','t19','t20')
View(ab)
ggplot(ab,aes(x=year, y =t1 ))+
geom_line()
#rownames(value) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업',
#                     '수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업',
#                     '숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업',
#                     '사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업',
str(ab)
#rownames(value) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업',
#                     '수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업',
#                     '숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업',
#                     '사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업',
as.numeric(ab)
#rownames(value) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업',
#                     '수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업',
#                     '숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업',
#                     '사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업',
ab <- as.numeric(ab)
as.data.frame(ab)
View(ab)
#rownames(value) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업',
#                     '수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업',
#                     '숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업',
#                     '사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업',
ab <- as.numeric(ab)
View(ab)
colnames(ab) <- c('t1','t2','t3','t4','t5','t6','t7','t8','t9','t10','t11','t12','t13','t14','t15','t16','t17','t18','t19','t20')
#rownames(value) <- c('농업, 임업 및 어업','광업','제조업',' 전기, 가스, 증기 및 공기조절 공급업',
#                     '수도, 하수 및 폐기물 처리, 원료 재생업','건설업','도매 및 소매업', '운수 및 창고업',
#                     '숙박 및 음식점업','정보통신업','금융 및 보험업','부동산업','전문, 과학 및 기술 서비스업',
#                     '사업시설 관리, 사업 지원 및 임대 서비스업','공공행정, 국방 및 사회보장 행정','교육 서비스업',
ab <- as.numeric(ab)
View(ab)
t1 <- c(42584621,46007807) #전체체
t1 <- c(84910,63468) #
t1 <- c(84910,63468) #df <- data.frame(year,a)
t1 <- c(84910,63468) #
t1 <- c(84910,63468) #df <- data.frame(year,a)
t1 <- c(84910,63468) ##abline :사선을 그을 때 쓰는 함수
t1 <- c(42584621,46007807) #전체
t2 <- c(576442,585443) #농업
df <- data.frame(year,t1)
ggplot(df,aes(x=year, y =t1 ))+
geom_line()
df2 <- data.frame(year,t2)
ggplot(df2,aes(x=year, y =t2 ))+
geom_line()
#df <- data.frame(year,a)
##abline :사선을 그을 때 쓰는 함수
par(mfrow = c(1,2))
ggplot(df,aes(x=year, y =t1 ))+
geom_line()
ggplot(df2,aes(x=year, y =t2 ))+
geom_line()
#df <- data.frame(year,a)
##abline :사선을 그을 때 쓰는 함수
par(mfrow = c(1,2))
ggplot(df,aes(x=year, y =t1 ))+
geom_line()
ggplot(df2,aes(x=year, y =t2 ))+
geom_line()
View(income)
income %>%
mutate(ratio= 2016 %% 2017)
#========================================================================
str(income)
income %>%
mutate(ratio= 2016 / 2017)
View(income)
inc <- income %>%
mutate(ratio= 2016 / 2017)
View(inc
View(inc)
inc <- income %>%
mutate(ratio= 2016 / 2017)
View(inc)
inc <- income %>%
mutate(ratio= '2016' / '2017')
View(inc)
inc <- income %>%
mutate(ratio= income$2016 / income$2017)
inc <- income %>%
mutate(ratio= income$`2016` / income$'2017')
View(inc)
inc %>% arrange(desc(ratio)) #내림차순
inc.d <- inc %>% arrange(desc(ratio)) #내림차순
View(inc.d)
